module(name = "hermetic python prototype")

# bazel module dependencies
# It's better to use a certain version of the module dependencies every time in order not to have unexpected dependency change consequences
bazel_dep(name = "rules_python", version = "0.27.0")

# local_path_override(
#     module_name = "rules_python",
#     path = "../..",
# )

# register the python toolchain
python = use_extension("@rules_python//python/extensions:python.bzl", "python")

python.toolchain(configure_coverage_tool = True, python_version = "3.11")
use_repo(python, "python_3_11")

# register the necessary extensions
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip_extensions",
    python_version = "3.11",
    requirements_lock = "//toolchains/python/requirements/3.11:requirements_lock.txt",
)

use_repo(pip, "pip_extensions")
